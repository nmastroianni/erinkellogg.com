// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Footer documents */
interface FooterDocumentData {
    /**
     * Links field in *Footer*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: footer.links[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    links: prismicT.GroupField<Simplify<FooterDocumentDataLinksItem>>;
}
/**
 * Item in Footer → Links
 *
 */
export interface FooterDocumentDataLinksItem {
    /**
     * LinkText field in *Footer → Links*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: footer.links[].linktext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    linktext: prismicT.KeyTextField;
    /**
     * Link field in *Footer → Links*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: footer.links[].link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
}
/**
 * Footer document from Prismic
 *
 * - **API ID**: `footer`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FooterDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<FooterDocumentData>, "footer", Lang>;
/** Content for Homepage documents */
interface HomepageDocumentData {
    /**
     * Title field in *Homepage*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Slice Zone field in *Homepage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<HomepageDocumentDataSlicesSlice>;
    /**
     * MetaDescription field in *Homepage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.metadescription
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    metadescription: prismicT.KeyTextField;
    /**
     * MetaImage field in *Homepage*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.metaimage
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    metaimage: prismicT.ImageField<never>;
}
/**
 * Slice for *Homepage → Slice Zone*
 *
 */
type HomepageDocumentDataSlicesSlice = ContentSlice | HeroSlice | DividerSlice | NewsletterSignupSlice;
/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for MainMenu documents */
interface MainmenuDocumentData {
    /**
     * DesktopButtonText field in *MainMenu*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: mainmenu.desktopbuttontext
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    desktopbuttontext: prismicT.KeyTextField;
    /**
     * DesktopButtonLink field in *MainMenu*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: mainmenu.desktopbuttonlink
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    desktopbuttonlink: prismicT.LinkField;
    /**
     * DesktopButtonColor field in *MainMenu*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: mainmenu.desktopbuttoncolor
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    desktopbuttoncolor: prismicT.SelectField<"Primary" | "Secondary" | "Accent" | "Neutral" | "Info" | "Success" | "Warning" | "Error">;
    /**
     * Slice Zone field in *MainMenu*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: mainmenu.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<MainmenuDocumentDataSlicesSlice>;
}
/**
 * Slice for *MainMenu → Slice Zone*
 *
 */
type MainmenuDocumentDataSlicesSlice = MenuItemSlice;
/**
 * MainMenu document from Prismic
 *
 * - **API ID**: `mainmenu`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MainmenuDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<MainmenuDocumentData>, "mainmenu", Lang>;
/** Content for Page documents */
interface PageDocumentData {
    /**
     * Title field in *Page*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: page.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Hide Page Title? field in *Page*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: page.hidepagetitle
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    hidepagetitle: prismicT.BooleanField;
    /**
     * Slice Zone field in *Page*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: page.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<PageDocumentDataSlicesSlice>;
    /**
     * MetaDescription field in *Page*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: page.metadescription
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    metadescription: prismicT.KeyTextField;
    /**
     * MetaImage field in *Page*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: page.metaimage
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    metaimage: prismicT.ImageField<never>;
    /**
     * CanonicalUrl field in *Page*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: page.canonicalurl
     * - **Tab**: SEO
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    canonicalurl: prismicT.KeyTextField;
}
/**
 * Slice for *Page → Slice Zone*
 *
 */
type PageDocumentDataSlicesSlice = ContentSlice | DividerSlice | HeroSlice | NewsletterSignupSlice;
/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;
/** Content for SiteMetadata documents */
interface SitemetadataDocumentData {
    /**
     * SiteTitle field in *SiteMetadata*
     *
     * - **Field Type**: Title
     * - **Placeholder**: *None*
     * - **API ID Path**: sitemetadata.sitetitle
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    sitetitle: prismicT.TitleField;
    /**
     * SiteMetaDescription field in *SiteMetadata*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: sitemetadata.sitemetadescription
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    sitemetadescription: prismicT.KeyTextField;
    /**
     * SiteMetaImage field in *SiteMetadata*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: sitemetadata.sitemetaimage
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    sitemetaimage: prismicT.ImageField<never>;
    /**
     * SiteCanonicalUrl field in *SiteMetadata*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: sitemetadata.sitecanonicalurl
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    sitecanonicalurl: prismicT.KeyTextField;
}
/**
 * SiteMetadata document from Prismic
 *
 * - **API ID**: `sitemetadata`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SitemetadataDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<SitemetadataDocumentData>, "sitemetadata", Lang>;
export type AllDocumentTypes = FooterDocument | HomepageDocument | MainmenuDocument | PageDocument | SitemetadataDocument;
/**
 * Primary content in Content → Primary
 *
 */
interface ContentSliceDefaultPrimary {
    /**
     * Content field in *Content → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Add page content
     * - **API ID Path**: content.primary.content
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    content: prismicT.RichTextField;
}
/**
 * Default variation for Content Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Content`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContentSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ContentSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Content*
 *
 */
type ContentSliceVariation = ContentSliceDefault;
/**
 * Content Shared Slice
 *
 * - **API ID**: `content`
 * - **Description**: `Content`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContentSlice = prismicT.SharedSlice<"content", ContentSliceVariation>;
/**
 * Primary content in Divider → Primary
 *
 */
interface DividerSliceDefaultPrimary {
    /**
     * uid field in *Divider → Primary*
     *
     * - **Field Type**: Number
     * - **Placeholder**: *None*
     * - **API ID Path**: divider.primary.uid
     * - **Documentation**: https://prismic.io/docs/core-concepts/number
     *
     */
    uid: prismicT.NumberField;
}
/**
 * Default variation for Divider Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Divider`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type DividerSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<DividerSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Divider*
 *
 */
type DividerSliceVariation = DividerSliceDefault;
/**
 * Divider Shared Slice
 *
 * - **API ID**: `divider`
 * - **Description**: `Divider`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type DividerSlice = prismicT.SharedSlice<"divider", DividerSliceVariation>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceDefaultPrimary {
    /**
     * HeadingText field in *Hero → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: Enter hero text
     * - **API ID Path**: hero.primary.headingtext
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    headingtext: prismicT.TitleField;
}
/**
 * Item in Hero → Items
 *
 */
export interface HeroSliceDefaultItem {
    /**
     * ButtonText field in *Hero → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttontext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    buttontext: prismicT.KeyTextField;
    /**
     * ButtonLink field in *Hero → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttonlink
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    buttonlink: prismicT.LinkField;
    /**
     * ButtonColor field in *Hero → Items*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttoncolor
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    buttoncolor: prismicT.SelectField<"Primary" | "Secondary" | "Accent" | "Neutral" | "Info" | "Success" | "Warning" | "Error">;
}
/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<HeroSliceDefaultPrimary>, Simplify<HeroSliceDefaultItem>>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceImageWithCardPrimary {
    /**
     * HeadingText field in *Hero → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: Enter hero text
     * - **API ID Path**: hero.primary.headingtext
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    headingtext: prismicT.TitleField;
    /**
     * BackgroundImage field in *Hero → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.backgroundimage
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    backgroundimage: prismicT.ImageField<never>;
}
/**
 * Item in Hero → Items
 *
 */
export interface HeroSliceImageWithCardItem {
    /**
     * ButtonText field in *Hero → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttontext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    buttontext: prismicT.KeyTextField;
    /**
     * ButtonLink field in *Hero → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttonlink
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    buttonlink: prismicT.LinkField;
    /**
     * ButtonColor field in *Hero → Items*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttoncolor
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    buttoncolor: prismicT.SelectField<"Primary" | "Secondary" | "Accent" | "Neutral" | "Info" | "Success" | "Warning" | "Error">;
}
/**
 * Image with Card variation for Hero Slice
 *
 * - **API ID**: `imageWithCard`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceImageWithCard = prismicT.SharedSliceVariation<"imageWithCard", Simplify<HeroSliceImageWithCardPrimary>, Simplify<HeroSliceImageWithCardItem>>;
/**
 * Primary content in Hero → Primary
 *
 */
interface HeroSliceImageHighlightCardOverlayPrimary {
    /**
     * HeadingText field in *Hero → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: Enter hero text
     * - **API ID Path**: hero.primary.headingtext
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    headingtext: prismicT.TitleField;
    /**
     * Description field in *Hero → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Optionally describe call to action
     * - **API ID Path**: hero.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *Hero → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * ImageLocation field in *Hero → Primary*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: hero.primary.imagelocation
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    imagelocation: prismicT.BooleanField;
}
/**
 * Item in Hero → Items
 *
 */
export interface HeroSliceImageHighlightCardOverlayItem {
    /**
     * ButtonText field in *Hero → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttontext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    buttontext: prismicT.KeyTextField;
    /**
     * ButtonLink field in *Hero → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttonlink
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    buttonlink: prismicT.LinkField;
    /**
     * ButtonColor field in *Hero → Items*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.items[].buttoncolor
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    buttoncolor: prismicT.SelectField<"Primary" | "Secondary" | "Accent" | "Neutral" | "Info" | "Success" | "Warning" | "Error">;
}
/**
 * Image Highlight Card Overlay variation for Hero Slice
 *
 * - **API ID**: `imageHighlightCardOverlay`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceImageHighlightCardOverlay = prismicT.SharedSliceVariation<"imageHighlightCardOverlay", Simplify<HeroSliceImageHighlightCardOverlayPrimary>, Simplify<HeroSliceImageHighlightCardOverlayItem>>;
/**
 * Slice variation for *Hero*
 *
 */
type HeroSliceVariation = HeroSliceDefault | HeroSliceImageWithCard | HeroSliceImageHighlightCardOverlay;
/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: `Hero`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSlice = prismicT.SharedSlice<"hero", HeroSliceVariation>;
/**
 * Primary content in MenuItem → Primary
 *
 */
interface MenuItemSliceDefaultPrimary {
    /**
     * LinkText field in *MenuItem → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: menu_item.primary.linktext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    linktext: prismicT.KeyTextField;
    /**
     * Link field in *MenuItem → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: menu_item.primary.link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
}
/**
 * Default variation for MenuItem Slice
 *
 * - **API ID**: `default`
 * - **Description**: `MenuItem`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type MenuItemSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<MenuItemSliceDefaultPrimary>, never>;
/**
 * Slice variation for *MenuItem*
 *
 */
type MenuItemSliceVariation = MenuItemSliceDefault;
/**
 * MenuItem Shared Slice
 *
 * - **API ID**: `menu_item`
 * - **Description**: `MenuItem`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type MenuItemSlice = prismicT.SharedSlice<"menu_item", MenuItemSliceVariation>;
/**
 * Primary content in NewsletterSignup → Primary
 *
 */
interface NewsletterSignupSliceDefaultPrimary {
    /**
     * Title field in *NewsletterSignup → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: Heading/Title of Form
     * - **API ID Path**: newsletter_signup.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *NewsletterSignup → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: newsletter_signup.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * FormLocation field in *NewsletterSignup → Primary*
     *
     * - **Field Type**: Boolean
     * - **Placeholder**: *None*
     * - **Default Value**: false
     * - **API ID Path**: newsletter_signup.primary.formlocation
     * - **Documentation**: https://prismic.io/docs/core-concepts/boolean
     *
     */
    formlocation: prismicT.BooleanField;
    /**
     * ButtonText field in *NewsletterSignup → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: newsletter_signup.primary.buttontext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    buttontext: prismicT.KeyTextField;
    /**
     * ButtonColor field in *NewsletterSignup → Primary*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **API ID Path**: newsletter_signup.primary.buttoncolor
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    buttoncolor: prismicT.SelectField<"Primary" | "Secondary" | "Accent" | "Neutral" | "Info" | "Success" | "Warning" | "Error">;
    /**
     * PlaceholderText field in *NewsletterSignup → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: newsletter_signup.primary.placeholdertext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    placeholdertext: prismicT.KeyTextField;
}
/**
 * Item in NewsletterSignup → Items
 *
 */
export interface NewsletterSignupSliceDefaultItem {
    /**
     * MailerLiteGroupId field in *NewsletterSignup → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: newsletter_signup.items[].mailerlitegroupid
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    mailerlitegroupid: prismicT.KeyTextField;
}
/**
 * Default variation for NewsletterSignup Slice
 *
 * - **API ID**: `default`
 * - **Description**: `NewsletterSignup`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type NewsletterSignupSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<NewsletterSignupSliceDefaultPrimary>, Simplify<NewsletterSignupSliceDefaultItem>>;
/**
 * Slice variation for *NewsletterSignup*
 *
 */
type NewsletterSignupSliceVariation = NewsletterSignupSliceDefault;
/**
 * NewsletterSignup Shared Slice
 *
 * - **API ID**: `newsletter_signup`
 * - **Description**: `NewsletterSignup`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type NewsletterSignupSlice = prismicT.SharedSlice<"newsletter_signup", NewsletterSignupSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { FooterDocumentData, FooterDocumentDataLinksItem, FooterDocument, HomepageDocumentData, HomepageDocumentDataSlicesSlice, HomepageDocument, MainmenuDocumentData, MainmenuDocumentDataSlicesSlice, MainmenuDocument, PageDocumentData, PageDocumentDataSlicesSlice, PageDocument, SitemetadataDocumentData, SitemetadataDocument, AllDocumentTypes, ContentSliceDefaultPrimary, ContentSliceDefault, ContentSliceVariation, ContentSlice, DividerSliceDefaultPrimary, DividerSliceDefault, DividerSliceVariation, DividerSlice, HeroSliceDefaultPrimary, HeroSliceDefaultItem, HeroSliceDefault, HeroSliceImageWithCardPrimary, HeroSliceImageWithCardItem, HeroSliceImageWithCard, HeroSliceImageHighlightCardOverlayPrimary, HeroSliceImageHighlightCardOverlayItem, HeroSliceImageHighlightCardOverlay, HeroSliceVariation, HeroSlice, MenuItemSliceDefaultPrimary, MenuItemSliceDefault, MenuItemSliceVariation, MenuItemSlice, NewsletterSignupSliceDefaultPrimary, NewsletterSignupSliceDefaultItem, NewsletterSignupSliceDefault, NewsletterSignupSliceVariation, NewsletterSignupSlice };
    }
}
